{
  // 타입 시스템의 가장 큰 장점 중 하나는 데이터 타입을 명확히 알 수 있어
  // 코드를 이해하기 쉽다는 것이다.
  // Item 2️⃣8️⃣. 유효한 상태만 표현하는 타입을 지향하기
  // 유효한 상태와 무효한 상태 둘 다 표현하는 타입은 혼란과 에러를 유발한다.
  // 유효한 상태만 표현하는 타입을 지향해야 한다.
  // Item 2️⃣9️⃣. 사용할 때는 너그럽게, 생성할 때는 엄격하게
  // 함수의 매개변수는 타입의 범위가 넓어도 되지만, 결과를 반환할 때는 일반적으로 타입의 범위가 더 구체적이어야 한다.
  // Item 3️⃣0️⃣. 문서에 타입 정보를 쓰지 않기
  // 주석과 변수명에 타입 정보를 넣지 않는다.
  // 단위가 있는 정보 값의 경우 변수명 또는 속성 이름에 단위를 포함하는 것을 고려할 수 있다.(timeMs, tempertureC).
  // Item 3️⃣1️⃣. 타입 주변에 null값 배치하기
  // Item 3️⃣2️⃣. 유니온의 인터페이스보다는 인터페이스의 유니온을 사용하기
}
